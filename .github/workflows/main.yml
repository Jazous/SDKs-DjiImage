# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  #release:
  #  types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1.Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # 2.Authenticates packages to push to GPR
      - name: 1/5 Setup .NET6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
          source-url: https://nuget.pkg.github.com/willzou/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # 3.build
      - name: 2/5 Install dependencies
        run: dotnet restore SDKs.DjiImage
      - name: 3/5 Build SDKs.DjiImage
        run: dotnet build --configuration Release SDKs.DjiImage
      - name: 4/5 Create the package
        run: dotnet pack --configuration Release SDKs.DjiImage
      # 4.Authenticates packages to push to nuget.org.
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: 5/5 Publish the package to nuget.org
        run: dotnet nuget push */bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
